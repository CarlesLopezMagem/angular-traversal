{"version":3,"file":"angular-traversal.js.map","sources":["ng://angular-traversal/lib/resolver.ts","ng://angular-traversal/lib/marker.ts","ng://angular-traversal/lib/normalizer.ts","ng://angular-traversal/lib/traverser.ts","ng://angular-traversal/lib/traverser.directive.ts","ng://angular-traversal/lib/traverser.link.ts","ng://angular-traversal/lib/module.ts","ng://angular-traversal/lib/http.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport abstract class Resolver {\n  abstract resolve(path: string, view: string, queryString?: string): Observable<any>;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class Marker {\n  abstract mark(context: any): string|string[];\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Normalizer {\n  normalize(path: string): string {\n    return path;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { Resolver } from './resolver';\nimport { Marker } from './marker';\nimport { Normalizer } from './normalizer';\nimport { Target, HttpParamsOptions } from './interfaces';\n\n@Injectable()\nexport class Traverser {\n\n  public target: BehaviorSubject<Target>;\n  private views: { [key: string]: any } = {};\n\n  constructor(private location: Location,\n              private resolver: Resolver,\n              private marker: Marker,\n              private normalizer: Normalizer) {\n    this.target = new BehaviorSubject({\n      component: null,\n      context: {},\n      contextPath: '',\n      path: '',\n      query: new HttpParams(),\n      view: 'view',\n    });\n  }\n\n  traverse(path: string, navigate: boolean = true) {\n    path = this.normalizer.normalize(path);\n    let contextPath: string = path;\n    let queryString = '';\n    let view = 'view';\n    if (path.indexOf('?') > -1) {\n      queryString = contextPath.split('?')[1];\n      contextPath = contextPath.split('?')[0];\n    }\n    if (path.indexOf('@@') > -1) {\n      view = contextPath.split('@@')[1];\n      contextPath = contextPath.split('@@')[0];\n      if (contextPath.slice(-1) === '/') {\n        contextPath = contextPath.slice(0, -1);\n      }\n    }\n    if (navigate) {\n      let navigateTo = path;\n      if (!contextPath) {\n        // if no contextPath, preserve the previous one\n        if (navigateTo[0] !== '/') {\n          navigateTo = '/' + navigateTo;\n        }\n        navigateTo = this.target.value.contextPath + navigateTo;\n      }\n      this.location.go(navigateTo);\n    }\n    const viewComponents: { [key: string]: any } = this.views[view];\n    if (viewComponents) {\n      let resolver;\n      if (!contextPath  // if we have no context path\n        && Object.keys(this.target.value.context).length > 0  // and we have context\n        && queryString === this.target.value.query.toString()) {  // and query string did not change\n        // then we keep the current context\n        resolver = of(this.target.value.context);\n        contextPath = this.target.value.contextPath;\n      } else {\n        resolver = this.resolver.resolve(contextPath, view, queryString);\n      }\n      if (resolver) {\n        resolver.subscribe((context: any) => {\n          const marker = this.marker.mark(context);\n          let component;\n          if (marker instanceof Array) {\n            const matches = marker.filter(m => viewComponents[m]);\n            if (matches.length > 0) {\n              component = viewComponents[matches[0]];\n            }\n          } else {\n            component = viewComponents[marker];\n          }\n          if (!component) {\n            component = viewComponents['*'];\n          }\n          if (component) {\n            this.target.next(<Target> {\n              context: context,\n              path: path,\n              contextPath: contextPath,\n              view: view,\n              component: component,\n              query: new HttpParams({fromString: queryString || ''} as HttpParamsOptions)\n            });\n          }\n        });\n      }\n    }\n  }\n\n  traverseHere() {\n    this.traverse(this.location.path());\n  }\n\n  addView(name: string, target: string, component: any) {\n    if (!this.views[name]) {\n      this.views[name] = {};\n    }\n    this.views[name][target] = component;\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  OnInit,\n  OnDestroy,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Traverser } from './traverser';\nimport { Target } from './interfaces';\n\n@Directive({\n  selector: 'traverser-outlet',\n})\nexport class TraverserOutlet implements OnInit, OnDestroy {\n  private viewInstance: any;\n\n  constructor(\n    private traverser: Traverser,\n    private location: Location,\n    private container: ViewContainerRef,\n    private resolver: ComponentFactoryResolver,\n  ) { }\n\n  ngOnInit() {\n    this.traverser.target.subscribe((target: Target) => this.render(target));\n    this.traverser.traverse(this.location.path());\n    this.location.subscribe(location => {\n      this.traverser.traverse(String(location.url), false);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.viewInstance) {\n      this.viewInstance.destroy();\n    }\n  }\n\n  render(target: Target) {\n    if (this.viewInstance) {\n      this.viewInstance.destroy();\n    }\n    if (target.component) {\n      const componentFactory = this.resolver.resolveComponentFactory(\n        target.component);\n      this.viewInstance = this.container.createComponent(componentFactory);\n    }\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Traverser } from './traverser';\nimport { Normalizer } from './normalizer';\n\n@Directive({\n  selector: ':not(a)[traverseTo]',\n  host: {\n    '(click)': 'onClick()'\n  }\n})\nexport class TraverserButton {\n  @Input() traverseTo: string;\n\n  constructor(\n    private traverser: Traverser,\n  ) {}\n\n  onClick() {\n    this.traverser.traverse(this.traverseTo);\n    return false;\n  }\n}\n\n@Directive({\n  selector: 'a[traverseTo]',\n  host: {\n    '(click)': 'onClick()'\n  }\n})\nexport class TraverserLink extends TraverserButton implements OnInit {\n  @HostBinding() href: string;\n\n  constructor(\n    private privateTraverser: Traverser,\n    private normalizer: Normalizer,\n  ) {\n    super(privateTraverser);\n  }\n\n  ngOnInit() {\n    this.href = this.normalizer.normalize(this.traverseTo);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TraverserOutlet } from './traverser.directive';\nimport { TraverserLink, TraverserButton } from './traverser.link';\nimport { Traverser } from './traverser';\n\n@NgModule({\n  declarations: [\n    TraverserOutlet,\n    TraverserButton,\n    TraverserLink,\n  ],\n  imports: [\n    HttpClientModule,\n  ],\n  providers: [\n    Location,\n    { provide: LocationStrategy, useClass: PathLocationStrategy },\n    Traverser,\n  ],\n  exports: [\n    TraverserOutlet,\n    TraverserButton,\n    TraverserLink,\n  ]\n})\nexport class TraversalModule {\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Resolver } from './resolver';\n\n// the actual value will be provided by the module\nexport let BACKEND_BASE_URL = new InjectionToken('backend.base.url');\n\n@Injectable()\nexport class BasicHttpResolver extends Resolver {\n\n  constructor(\n    private http: HttpClient,\n    @Inject(BACKEND_BASE_URL) private backend: string,\n  ) {\n    super();\n  }\n\n  resolve(path: string, view: string, queryString?: string): Observable<any> {\n    const headers = new HttpHeaders()\n      .append('Accept', 'application/json')\n      .append('Content-Type', 'application/json');\n    return this.http.get(this.backend + path, { headers });\n  }\n}\n"],"names":[],"mappings":"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"}
